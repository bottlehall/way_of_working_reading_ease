#!/usr/bin/ruby
# frozen_string_literal: true

require_relative 'complex-word'

def fog_index(text)
  word_count = 0
  sentence_count = 0
  complex_word_count = 0
  in_word = false
  word = ''

  text.chars.each do |ch|
    if ch == ' '
      if in_word
        word_count += 1
        complex_word_count += 1 if ComplexWord.new(word).complex?
        in_word = false
        word = ''
      end

    elsif '?!.-;'.scan(ch).count.positive?
      if in_word
        word_count += 1
        sentence_count += 1
        complex_word_count += 1 if ComplexWord.new(word).complex?
        in_word = false
        word = ''
      end

    elsif ch.match?(/[[:alpha:]]/)
      in_word = true
      word += ch
    end
  end

  words_per_sentence = sentence_count.positive? ? (Float(word_count) / Float(sentence_count)) : Float(word_count)
  pc_complex_words = word_count.positive? ? (Float(complex_word_count) / Float(word_count)) * 100.0 : 0.0
  (words_per_sentence + pc_complex_words) * 0.4
end

def interpret_fog_index(value, threshold)
  return if value < threshold

  levels = { 16 => 'graduate', 12 => 'undergraduate', 8 => 'secondary', 6 => 'KS4', 0 => 'KS1-3' }
  description = ''
  levels.each do |level, desc|
    if value.round > level
      description = desc
      break
    end
  end
  "#{description} (#{value.round})"
end

threshold = 0
ARGV.each do |arg|
  if arg == '--help'
    puts "fog --help
      Displays this message.
  fog files...
      Reports the reading level of each file specified.
  fog --threshold=n files...
      Reports the reading level of each file where the level meets or exceeds the threshold"
    exit
  end

  ARGV.delete(arg) if arg == '--threshold='
end

puts 'No files specified' if ARGV.count.zero?

ARGV.each do |filepath|
  text = File.read(filepath)
  interpretation = interpret_fog_index(fog_index(text), threshold)
  puts "#{filepath}: #{interpretation}" unless interpretation.nil?
end
